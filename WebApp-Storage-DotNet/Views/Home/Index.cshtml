@{
    ViewBag.Title = "Index";
}
@*Header Section*@
<div class="jumbotron">
    <h2>Azure Blob Storage Sample App</h2>
</div>

@*Select Files and Upload: Displays a 'Select Files' button that uses a File Upload control to select files to be uploaded and
    calls the JS function: DisplayFilesToUpload() that lists the file name and size for all files to be uploaded.
    Also the JS function displays the Upload submit button that calls UploadAsync that uploads the files to Azure Blob Storage.*@
@using (Html.BeginForm("UploadAsync", "Home", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    <div class="fileUpload btn btn-default">
        <span>Select Files</span><input type="file" id="file" name="selectFiles" class="upload" onchange="getExistingFiles()" multiple />
    </div>
    @* This gets populated from the DisplayFilesToUpload() JS function*@
    <p id="FilesToUpload" class="video-preview"></p>
}

@*loops through all files and displays three items:
    - The Image (159x159) - [Set in .thumb css class]
    - A delete icon (30X30) - [Set in .deleteDiv css class] (~/Images/deleteImage.png) that calls deleteImage JS function
    - A DeleteAll button if there are any items that calls the DeleteAll controller Action*@
@if (Model != null && Model.Count > 0)
{
    foreach (var item in Model)
    {
        var decodedFileName = System.Web.HttpUtility.UrlDecode(Path.GetFileName(item.OriginalString));

        <div class="imageBlock">
            @if (!string.IsNullOrEmpty(decodedFileName) && Path.GetExtension(decodedFileName)?.ToLower() == ".mp4")
            {
                <video width="320" height="240" controls>
                    <source src="@item" type="video/mp4">
                    Your browser does not support the video tag.
                </video>
                <br />
                <div class="downloadDiv">
                    <a href="@Url.Action("Download", "Home", new { filename = decodedFileName })">@decodedFileName</a>
                </div>
            }
            else
            {
                <a href="@item" target="_blank"><img class="thumb" src="@item" alt="images" /></a>
                <br />
                <div class="downloadDiv">
                    <a href="@Url.Action("Download", "Home", new { filename = decodedFileName })">@decodedFileName</a>
                </div>
            }
            <br />
            <div class="deleteDiv"><img class="deleteIcon" src="~/Images/deleteImage.png" title="Delete Image" onclick="deleteImage('@item');" /></div>
        </div>
    }
    using (Html.BeginForm("DeleteAll", "Home", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        <div class="fileUpload btn btn-default"><span>Delete All Files</span><input type="submit" name="deleteAll" class="upload" /></div>
    }
}


<script>
    //Calls async Task<ActionResult> DeleteImage(string name) in the HomeController and Refreshes the page
    function deleteImage(item) {
        var url = "/Home/DeleteImage";
        $.post(url, { Name: item }, function (data) {
            window.location.href = "/Home/Index";
        });
    }

    var existingFiles = {};

    //Lists the file name and size for all files to be uploaded by updating the <p id="FilesToUpload"></p> control

    function DisplayFilesToUpload() {
        var element = document.getElementById("file");
        var html = "";

        html = "<h3>File(s) to Upload</h3>";
        for (var i = 0; i < element.files.length; i++) {
            var file = element.files[i];
            var fileName = file.name;
            var fileSize = "size: " + file.size + " bytes";

            html += "<strong>" + (i + 1) + "</strong>. File: ";
            if (existingFiles.hasOwnProperty(fileName)) {
                html += "<span style='color: red;'>" + fileName + " (This specific file already exists)</span> ";
            } else {
                html += fileName + " ";
            }
            html += "(" + fileSize + ")<br>";
        }

        html += "<div class='fileUpload btn btn-default'><span>Upload</span><input type='submit' class='upload' value='Upload'/></div>";
        document.getElementById("FilesToUpload").innerHTML = html;
    }


    function getExistingFiles() {
        var url = "/Home/getCurrentFiles";
        $.get(url, function (data) {

            data.forEach(function (fileName) {
                existingFiles[fileName] = true;
            });
            DisplayFilesToUpload();
        });
    }

</script>
